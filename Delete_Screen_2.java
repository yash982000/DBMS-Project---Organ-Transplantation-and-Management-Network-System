/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbms;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Meet
 */
public class Delete_Screen_2 extends javax.swing.JFrame {

    /**
     * Creates new form Delete_Screen
     */
    public Delete_Screen_2() {
        initComponents();
        delete_by_user_combobox.setVisible(false);
        delete_by_patient_combobox.setVisible(false);
        delete_by_donor_combobox.setVisible(false);
        delete_by_doctor_combobox.setVisible(false);
        delete_by_organization_combobox.setVisible(false);
        delete_by_orgavailable_combobox.setVisible(false);
        delete_by_transaction_combobox.setVisible(false);
        delete_by_orghead_combobox.setVisible(false);
        
        delete_by_user_done_button.setVisible(false);
        delete_by_patient_done_button.setVisible(false);
        delete_by_donor_done_button.setVisible(false);
        delete_by_doctor_done_button.setVisible(false);
        delete_by_organization_done_button.setVisible(false);
        delete_by_orgavailable_done_button.setVisible(false);
        delete_by_transaction_done_button.setVisible(false);
        delete_by_orghead_done_button.setVisible(false);
        
        delete_by_user_textfield.setVisible(false);
        delete_by_patient_textfield.setVisible(false);
        delete_by_donor_textfield.setVisible(false);
        delete_by_doctor_textfield.setVisible(false);
        delete_by_organization_textfield.setVisible(false);
        delete_by_orgavailable_textfield.setVisible(false);
        delete_by_transaction_textfield.setVisible(false);
        delete_by_orghead_textfield.setVisible(false);
        
//        DISPLAY_USERS_BUTTON.setVisible(false);
//        DISPLAY_PATIENTS_BUTTON.setVisible(false);
//        DISPLAY_DONOR_BUTTON.setVisible(false);
//        DISPLAY_DOCTOR_BUTTON.setVisible(false);
//        DISPLAY_ORGANIZATION_BUTTON.setVisible(false);
//        DISPLAY_ORGAN_BUTTON.setVisible(false);
//        DISPLAY_TRANSACTIONS_BUTTON.setVisible(false);
//        DISPLAY_ORGHEAD_BUTTON.setVisible(false);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        delete_by_patient_button = new javax.swing.JButton();
        delete_by_user_button = new javax.swing.JButton();
        delete_by_doctor_button = new javax.swing.JButton();
        delete_by_donor_button = new javax.swing.JButton();
        delete_by_user_combobox = new javax.swing.JComboBox<>();
        delete_by_patient_combobox = new javax.swing.JComboBox<>();
        delete_by_donor_combobox = new javax.swing.JComboBox<>();
        delete_by_doctor_combobox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        delete_by_donor_textfield = new javax.swing.JTextField();
        delete_by_patient_textfield = new javax.swing.JTextField();
        delete_by_user_textfield = new javax.swing.JTextField();
        delete_by_doctor_textfield = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        delete_by_donor_done_button = new javax.swing.JButton();
        delete_by_doctor_done_button = new javax.swing.JButton();
        delete_by_patient_done_button = new javax.swing.JButton();
        delete_by_user_done_button = new javax.swing.JButton();
        delete_by_organization_done_button = new javax.swing.JButton();
        delete_by_organization_button = new javax.swing.JButton();
        delete_by_orgavailable_button = new javax.swing.JButton();
        delete_by_transaction_button = new javax.swing.JButton();
        delete_by_orghead_button = new javax.swing.JButton();
        delete_by_organization_combobox = new javax.swing.JComboBox<>();
        delete_by_orgavailable_combobox = new javax.swing.JComboBox<>();
        delete_by_transaction_combobox = new javax.swing.JComboBox<>();
        delete_by_orghead_combobox = new javax.swing.JComboBox<>();
        delete_by_orgavailable_textfield = new javax.swing.JTextField();
        delete_by_organization_textfield = new javax.swing.JTextField();
        delete_by_orghead_textfield = new javax.swing.JTextField();
        delete_by_transaction_textfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        delete_by_orgavailable_done_button = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        delete_by_transaction_done_button = new javax.swing.JButton();
        delete_by_orghead_done_button = new javax.swing.JButton();
        DISPLAY_USERS_BUTTON = new javax.swing.JButton();
        DISPLAY_DONOR_BUTTON = new javax.swing.JButton();
        DISPLAY_ORGANIZATION_BUTTON = new javax.swing.JButton();
        DISPLAY_PATIENTS_BUTTON = new javax.swing.JButton();
        DISPLAY_DOCTOR_BUTTON = new javax.swing.JButton();
        DISPLAY_ORGAN_BUTTON = new javax.swing.JButton();
        DISPLAY_TRANSACTIONS_BUTTON = new javax.swing.JButton();
        DISPLAY_ORGHEAD_BUTTON = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Back (1).jpg")); // NOI18N
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        delete_by_patient_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_patient_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Delete.jpg")); // NOI18N
        delete_by_patient_button.setText("Delete By Patient ");
        delete_by_patient_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_patient_buttonActionPerformed(evt);
            }
        });

        delete_by_user_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_user_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Delete.jpg")); // NOI18N
        delete_by_user_button.setText("Delete By User ");
        delete_by_user_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_user_buttonActionPerformed(evt);
            }
        });

        delete_by_doctor_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_doctor_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Delete.jpg")); // NOI18N
        delete_by_doctor_button.setText("Delete By Doctor ");
        delete_by_doctor_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_doctor_buttonActionPerformed(evt);
            }
        });

        delete_by_donor_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_donor_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Delete.jpg")); // NOI18N
        delete_by_donor_button.setText("Delete By Donor ");
        delete_by_donor_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_donor_buttonActionPerformed(evt);
            }
        });

        delete_by_user_combobox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_user_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USER_ID", "NAME", "DATE_OF_BIRTH", "MEDICAL_INSURANCE", "MEDICAL_HISTORY", "STREET", "CITY", "STATE" }));
        delete_by_user_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_user_comboboxActionPerformed(evt);
            }
        });

        delete_by_patient_combobox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_patient_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PATIENT_ID", "ORGAN_REQ", "REASON_OF_PROCUREMENT", "DOCTOR_ID", "USER_ID" }));

        delete_by_donor_combobox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_donor_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DONOR_ID", "ORGAN_DONATED", "REASON_OF_DONATION", "ORGANIZATION_ID", "USER_ID" }));

        delete_by_doctor_combobox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_doctor_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DOCTOR_ID", "DOCTOR_NAME", "DEPARTMENT_NAME", "ORGANIZATION_ID" }));

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        delete_by_donor_textfield.setBackground(new java.awt.Color(0, 102, 102));
        delete_by_donor_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_donor_textfield.setForeground(new java.awt.Color(255, 255, 255));

        delete_by_patient_textfield.setBackground(new java.awt.Color(0, 102, 102));
        delete_by_patient_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_patient_textfield.setForeground(new java.awt.Color(255, 255, 255));

        delete_by_user_textfield.setBackground(new java.awt.Color(0, 102, 102));
        delete_by_user_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_user_textfield.setForeground(new java.awt.Color(255, 255, 255));

        delete_by_doctor_textfield.setBackground(new java.awt.Color(0, 102, 102));
        delete_by_doctor_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_doctor_textfield.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        delete_by_donor_done_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_donor_done_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        delete_by_donor_done_button.setText("Done");
        delete_by_donor_done_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_donor_done_buttonActionPerformed(evt);
            }
        });

        delete_by_doctor_done_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_doctor_done_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done.jpg")); // NOI18N
        delete_by_doctor_done_button.setText("Done");
        delete_by_doctor_done_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_doctor_done_buttonActionPerformed(evt);
            }
        });

        delete_by_patient_done_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_patient_done_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        delete_by_patient_done_button.setText("Done");
        delete_by_patient_done_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_patient_done_buttonActionPerformed(evt);
            }
        });

        delete_by_user_done_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_user_done_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        delete_by_user_done_button.setText("Done");
        delete_by_user_done_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_user_done_buttonActionPerformed(evt);
            }
        });

        delete_by_organization_done_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_organization_done_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done.jpg")); // NOI18N
        delete_by_organization_done_button.setText("Done");
        delete_by_organization_done_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_organization_done_buttonActionPerformed(evt);
            }
        });

        delete_by_organization_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_organization_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Delete.jpg")); // NOI18N
        delete_by_organization_button.setText("Delete By Organization ");
        delete_by_organization_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_organization_buttonActionPerformed(evt);
            }
        });

        delete_by_orgavailable_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_orgavailable_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Delete.jpg")); // NOI18N
        delete_by_orgavailable_button.setText("Delete By Organ Available ");
        delete_by_orgavailable_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_orgavailable_buttonActionPerformed(evt);
            }
        });

        delete_by_transaction_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_transaction_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Delete.jpg")); // NOI18N
        delete_by_transaction_button.setText("Delete By Transaction ");
        delete_by_transaction_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_transaction_buttonActionPerformed(evt);
            }
        });

        delete_by_orghead_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_orghead_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Delete.jpg")); // NOI18N
        delete_by_orghead_button.setText("Delete By Organization Head ");
        delete_by_orghead_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_orghead_buttonActionPerformed(evt);
            }
        });

        delete_by_organization_combobox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_organization_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ORGANIZATION_ID", "ORGANIZATION_NAME", "LOCATION", "GOVERNMENT_APPROVED" }));

        delete_by_orgavailable_combobox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_orgavailable_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Organ_ID", "Organ_Name", "Donor_ID" }));

        delete_by_transaction_combobox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_transaction_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PATIENT_ID", "ORGAN_ID", "DONOR_ID", "DATE_OF_TRANSACTION", "STATUS" }));

        delete_by_orghead_combobox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_orghead_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Organization_ID", "Employee_ID", "Name", "Date_Of_Joining", "Term_Length" }));

        delete_by_orgavailable_textfield.setBackground(new java.awt.Color(0, 102, 102));
        delete_by_orgavailable_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_orgavailable_textfield.setForeground(new java.awt.Color(255, 255, 255));

        delete_by_organization_textfield.setBackground(new java.awt.Color(0, 102, 102));
        delete_by_organization_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_organization_textfield.setForeground(new java.awt.Color(255, 255, 255));

        delete_by_orghead_textfield.setBackground(new java.awt.Color(0, 102, 102));
        delete_by_orghead_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_orghead_textfield.setForeground(new java.awt.Color(255, 255, 255));

        delete_by_transaction_textfield.setBackground(new java.awt.Color(0, 102, 102));
        delete_by_transaction_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_transaction_textfield.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        delete_by_orgavailable_done_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_orgavailable_done_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done.jpg")); // NOI18N
        delete_by_orgavailable_done_button.setText("Done");
        delete_by_orgavailable_done_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_orgavailable_done_buttonActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        delete_by_transaction_done_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_transaction_done_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done.jpg")); // NOI18N
        delete_by_transaction_done_button.setText("Done");
        delete_by_transaction_done_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_transaction_done_buttonActionPerformed(evt);
            }
        });

        delete_by_orghead_done_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        delete_by_orghead_done_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        delete_by_orghead_done_button.setText("Done");
        delete_by_orghead_done_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_by_orghead_done_buttonActionPerformed(evt);
            }
        });

        DISPLAY_USERS_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DISPLAY_USERS_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_USERS_BUTTON.setText("DISPLAY USERS");
        DISPLAY_USERS_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_USERS_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_DONOR_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DISPLAY_DONOR_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_DONOR_BUTTON.setText("DISPLAY DONORS");
        DISPLAY_DONOR_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_DONOR_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_ORGANIZATION_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DISPLAY_ORGANIZATION_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_ORGANIZATION_BUTTON.setText("DISPLAY ORGANIZATION");
        DISPLAY_ORGANIZATION_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_ORGANIZATION_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_PATIENTS_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DISPLAY_PATIENTS_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_PATIENTS_BUTTON.setText("DISPLAY PATIENTS");
        DISPLAY_PATIENTS_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_PATIENTS_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_DOCTOR_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DISPLAY_DOCTOR_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_DOCTOR_BUTTON.setText("DISPLAY DOCTORS");
        DISPLAY_DOCTOR_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_DOCTOR_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_ORGAN_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DISPLAY_ORGAN_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_ORGAN_BUTTON.setText("DISPLAY ORGAN AVAILABLE");
        DISPLAY_ORGAN_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_ORGAN_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_TRANSACTIONS_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DISPLAY_TRANSACTIONS_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_TRANSACTIONS_BUTTON.setText("DISPLAY TRANSACTIONS");
        DISPLAY_TRANSACTIONS_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_TRANSACTIONS_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_ORGHEAD_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DISPLAY_ORGHEAD_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_ORGHEAD_BUTTON.setText("DISPLAY ORGANIZATION HEAD");
        DISPLAY_ORGHEAD_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_ORGHEAD_BUTTONActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jButton5)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(delete_by_donor_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delete_by_patient_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delete_by_doctor_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delete_by_user_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delete_by_organization_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delete_by_orgavailable_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delete_by_transaction_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delete_by_orghead_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(138, 138, 138)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(delete_by_donor_combobox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(delete_by_user_combobox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(delete_by_patient_combobox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(delete_by_doctor_combobox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(delete_by_organization_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(delete_by_orgavailable_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(delete_by_transaction_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(delete_by_orghead_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(117, 117, 117)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(delete_by_user_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(delete_by_patient_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(delete_by_donor_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(delete_by_doctor_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(delete_by_orgavailable_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(delete_by_orghead_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(delete_by_organization_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(delete_by_transaction_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(delete_by_user_done_button)
                                    .addComponent(delete_by_patient_done_button)
                                    .addComponent(delete_by_donor_done_button)
                                    .addComponent(delete_by_doctor_done_button)
                                    .addComponent(delete_by_organization_done_button)
                                    .addComponent(delete_by_orgavailable_done_button))
                                .addGap(44, 44, 44)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(delete_by_transaction_done_button)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(delete_by_orghead_done_button)
                                .addGap(72, 72, 72)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DISPLAY_USERS_BUTTON)
                                    .addComponent(DISPLAY_PATIENTS_BUTTON))
                                .addGap(59, 59, 59)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DISPLAY_DONOR_BUTTON)
                                    .addComponent(DISPLAY_DOCTOR_BUTTON))
                                .addGap(61, 61, 61)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DISPLAY_ORGANIZATION_BUTTON)
                                    .addComponent(DISPLAY_ORGAN_BUTTON))
                                .addGap(49, 49, 49)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DISPLAY_TRANSACTIONS_BUTTON)
                                    .addComponent(DISPLAY_ORGHEAD_BUTTON)))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jButton5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(delete_by_user_button)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(delete_by_user_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(delete_by_user_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(delete_by_user_done_button)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(34, 34, 34)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                    .addComponent(delete_by_patient_button)
                                                                    .addComponent(delete_by_patient_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(delete_by_patient_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jLabel1))
                                                            .addComponent(delete_by_patient_done_button))
                                                        .addGap(30, 30, 30)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(delete_by_donor_button)
                                                            .addComponent(delete_by_donor_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(delete_by_donor_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel3))
                                                    .addComponent(delete_by_donor_done_button))
                                                .addGap(39, 39, 39)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(delete_by_doctor_button)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(delete_by_doctor_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(delete_by_doctor_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(delete_by_doctor_done_button))
                                        .addGap(25, 25, 25)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(delete_by_organization_button)
                                            .addComponent(delete_by_organization_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(delete_by_organization_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6))
                                    .addComponent(delete_by_organization_done_button, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(delete_by_orgavailable_button)
                                                .addComponent(delete_by_orgavailable_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(delete_by_orgavailable_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7))
                                    .addComponent(delete_by_orgavailable_done_button))
                                .addGap(16, 16, 16)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(delete_by_transaction_button)
                                    .addComponent(delete_by_transaction_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(delete_by_transaction_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addComponent(delete_by_transaction_done_button, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(delete_by_orghead_button)
                                    .addComponent(delete_by_orghead_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(delete_by_orghead_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(delete_by_orghead_done_button)
                                    .addComponent(DISPLAY_USERS_BUTTON)
                                    .addComponent(DISPLAY_DONOR_BUTTON)
                                    .addComponent(DISPLAY_ORGANIZATION_BUTTON)
                                    .addComponent(DISPLAY_TRANSACTIONS_BUTTON))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DISPLAY_PATIENTS_BUTTON)
                    .addComponent(DISPLAY_DOCTOR_BUTTON)
                    .addComponent(DISPLAY_ORGAN_BUTTON)
                    .addComponent(DISPLAY_ORGHEAD_BUTTON))
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void delete_by_user_comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_user_comboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_by_user_comboboxActionPerformed

    private void delete_by_transaction_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_transaction_buttonActionPerformed
 delete_by_user_combobox.setVisible(false);
        delete_by_patient_combobox.setVisible(false);
        delete_by_donor_combobox.setVisible(false);
        delete_by_doctor_combobox.setVisible(false);
        delete_by_organization_combobox.setVisible(false);
        delete_by_orgavailable_combobox.setVisible(false);
        delete_by_orghead_combobox.setVisible(false);
        
        delete_by_user_done_button.setVisible(false);
        delete_by_patient_done_button.setVisible(false);
        delete_by_donor_done_button.setVisible(false);
        delete_by_doctor_done_button.setVisible(false);
        delete_by_organization_done_button.setVisible(false);
        delete_by_orgavailable_done_button.setVisible(false);
        delete_by_orghead_done_button.setVisible(false);
        
        delete_by_user_textfield.setVisible(false);
        delete_by_patient_textfield.setVisible(false);
        delete_by_donor_textfield.setVisible(false);
        delete_by_doctor_textfield.setVisible(false);
        delete_by_organization_textfield.setVisible(false);
        delete_by_orgavailable_textfield.setVisible(false);
        delete_by_orghead_textfield.setVisible(false);
        
delete_by_transaction_combobox.setVisible(true);
        delete_by_transaction_done_button.setVisible(true);
        delete_by_transaction_textfield.setVisible(true);
                

// TODO add your handling code here:
    }//GEN-LAST:event_delete_by_transaction_buttonActionPerformed

    private void delete_by_orghead_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_orghead_buttonActionPerformed
 delete_by_user_combobox.setVisible(false);
        delete_by_patient_combobox.setVisible(false);
        delete_by_donor_combobox.setVisible(false);
        delete_by_doctor_combobox.setVisible(false);
        delete_by_organization_combobox.setVisible(false);
        delete_by_orgavailable_combobox.setVisible(false);
        delete_by_transaction_combobox.setVisible(false);
        
        delete_by_user_done_button.setVisible(false);
        delete_by_patient_done_button.setVisible(false);
        delete_by_donor_done_button.setVisible(false);
        delete_by_doctor_done_button.setVisible(false);
        delete_by_organization_done_button.setVisible(false);
        delete_by_orgavailable_done_button.setVisible(false);
        delete_by_transaction_done_button.setVisible(false);
        
        delete_by_user_textfield.setVisible(false);
        delete_by_patient_textfield.setVisible(false);
        delete_by_donor_textfield.setVisible(false);
        delete_by_doctor_textfield.setVisible(false);
        delete_by_organization_textfield.setVisible(false);
        delete_by_orgavailable_textfield.setVisible(false);
        delete_by_transaction_textfield.setVisible(false);
        
        
        delete_by_orghead_combobox.setVisible(true);
        delete_by_orghead_done_button.setVisible(true);
        delete_by_orghead_textfield.setVisible(true);
               // TODO add your handling code here:
    }//GEN-LAST:event_delete_by_orghead_buttonActionPerformed

    private void delete_by_user_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_user_buttonActionPerformed
        delete_by_patient_combobox.setVisible(false);
        delete_by_donor_combobox.setVisible(false);
        delete_by_doctor_combobox.setVisible(false);
        delete_by_organization_combobox.setVisible(false);
        delete_by_orgavailable_combobox.setVisible(false);
        delete_by_transaction_combobox.setVisible(false);
        delete_by_orghead_combobox.setVisible(false);
        
        delete_by_patient_done_button.setVisible(false);
        delete_by_donor_done_button.setVisible(false);
        delete_by_doctor_done_button.setVisible(false);
        delete_by_organization_done_button.setVisible(false);
        delete_by_orgavailable_done_button.setVisible(false);
        delete_by_transaction_done_button.setVisible(false);
        delete_by_orghead_done_button.setVisible(false);
        
        delete_by_patient_textfield.setVisible(false);
        delete_by_donor_textfield.setVisible(false);
        delete_by_doctor_textfield.setVisible(false);
        delete_by_organization_textfield.setVisible(false);
        delete_by_orgavailable_textfield.setVisible(false);
        delete_by_transaction_textfield.setVisible(false);
        delete_by_orghead_textfield.setVisible(false);
                // TODO add your handling code here:
                
        delete_by_user_combobox.setVisible(true);
        delete_by_user_done_button.setVisible(true);
        delete_by_user_textfield.setVisible(true);
        
    }//GEN-LAST:event_delete_by_user_buttonActionPerformed

    private void delete_by_patient_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_patient_buttonActionPerformed
        delete_by_user_combobox.setVisible(false);
        delete_by_donor_combobox.setVisible(false);
        delete_by_doctor_combobox.setVisible(false);
        delete_by_organization_combobox.setVisible(false);
        delete_by_orgavailable_combobox.setVisible(false);
        delete_by_transaction_combobox.setVisible(false);
        delete_by_orghead_combobox.setVisible(false);
        
        delete_by_user_done_button.setVisible(false);
        delete_by_donor_done_button.setVisible(false);
        delete_by_doctor_done_button.setVisible(false);
        delete_by_organization_done_button.setVisible(false);
        delete_by_orgavailable_done_button.setVisible(false);
        delete_by_transaction_done_button.setVisible(false);
        delete_by_orghead_done_button.setVisible(false);
        
        delete_by_user_textfield.setVisible(false);
        delete_by_donor_textfield.setVisible(false);
        delete_by_doctor_textfield.setVisible(false);
        delete_by_organization_textfield.setVisible(false);
        delete_by_orgavailable_textfield.setVisible(false);
        delete_by_transaction_textfield.setVisible(false);
        delete_by_orghead_textfield.setVisible(false);
       


        // TODO add your handling code here:
        
        delete_by_patient_combobox.setVisible(true);
        delete_by_patient_done_button.setVisible(true);
        delete_by_patient_textfield.setVisible(true);
       
    }//GEN-LAST:event_delete_by_patient_buttonActionPerformed

    private void delete_by_donor_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_donor_buttonActionPerformed
 delete_by_user_combobox.setVisible(false);
        delete_by_patient_combobox.setVisible(false);
        delete_by_doctor_combobox.setVisible(false);
        delete_by_organization_combobox.setVisible(false);
        delete_by_orgavailable_combobox.setVisible(false);
        delete_by_transaction_combobox.setVisible(false);
        delete_by_orghead_combobox.setVisible(false);
        
        delete_by_user_done_button.setVisible(false);
        delete_by_patient_done_button.setVisible(false);
        delete_by_doctor_done_button.setVisible(false);
        delete_by_organization_done_button.setVisible(false);
        delete_by_orgavailable_done_button.setVisible(false);
        delete_by_transaction_done_button.setVisible(false);
        delete_by_orghead_done_button.setVisible(false);
        
        delete_by_user_textfield.setVisible(false);
        delete_by_patient_textfield.setVisible(false);
        delete_by_doctor_textfield.setVisible(false);
        delete_by_organization_textfield.setVisible(false);
        delete_by_orgavailable_textfield.setVisible(false);
        delete_by_transaction_textfield.setVisible(false);
        delete_by_orghead_textfield.setVisible(false);
               // TODO add your handling code here:
               
        delete_by_donor_combobox.setVisible(true);
        delete_by_donor_done_button.setVisible(true);
        delete_by_donor_textfield.setVisible(true);

    }//GEN-LAST:event_delete_by_donor_buttonActionPerformed

    private void delete_by_doctor_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_doctor_buttonActionPerformed
 delete_by_user_combobox.setVisible(false);
        delete_by_patient_combobox.setVisible(false);
        delete_by_donor_combobox.setVisible(false);
        delete_by_organization_combobox.setVisible(false);
        delete_by_orgavailable_combobox.setVisible(false);
        delete_by_transaction_combobox.setVisible(false);
        delete_by_orghead_combobox.setVisible(false);
        
        delete_by_user_done_button.setVisible(false);
        delete_by_patient_done_button.setVisible(false);
        delete_by_donor_done_button.setVisible(false);
        delete_by_organization_done_button.setVisible(false);
        delete_by_orgavailable_done_button.setVisible(false);
        delete_by_transaction_done_button.setVisible(false);
        delete_by_orghead_done_button.setVisible(false);
        
        delete_by_user_textfield.setVisible(false);
        delete_by_patient_textfield.setVisible(false);
        delete_by_donor_textfield.setVisible(false);
        delete_by_organization_textfield.setVisible(false);
        delete_by_orgavailable_textfield.setVisible(false);
        delete_by_transaction_textfield.setVisible(false);
        delete_by_orghead_textfield.setVisible(false);
               // TODO add your handling code here:
               
               delete_by_doctor_combobox.setVisible(true);
        delete_by_doctor_done_button.setVisible(true);
        delete_by_doctor_textfield.setVisible(true);
        
    }//GEN-LAST:event_delete_by_doctor_buttonActionPerformed

    private void delete_by_organization_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_organization_buttonActionPerformed
 delete_by_user_combobox.setVisible(false);
        delete_by_patient_combobox.setVisible(false);
        delete_by_donor_combobox.setVisible(false);
        delete_by_doctor_combobox.setVisible(false);
        delete_by_orgavailable_combobox.setVisible(false);
        delete_by_transaction_combobox.setVisible(false);
        delete_by_orghead_combobox.setVisible(false);
        
        delete_by_user_done_button.setVisible(false);
        delete_by_patient_done_button.setVisible(false);
        delete_by_donor_done_button.setVisible(false);
        delete_by_doctor_done_button.setVisible(false);
        delete_by_orgavailable_done_button.setVisible(false);
        delete_by_transaction_done_button.setVisible(false);
        delete_by_orghead_done_button.setVisible(false);
        
        delete_by_user_textfield.setVisible(false);
        delete_by_patient_textfield.setVisible(false);
        delete_by_donor_textfield.setVisible(false);
        delete_by_doctor_textfield.setVisible(false);
        delete_by_orgavailable_textfield.setVisible(false);
        delete_by_transaction_textfield.setVisible(false);
        delete_by_orghead_textfield.setVisible(false);
        

        delete_by_organization_combobox.setVisible(true);
        delete_by_organization_done_button.setVisible(true);
        delete_by_organization_textfield.setVisible(true);
                


// TODO add your handling code here:
    }//GEN-LAST:event_delete_by_organization_buttonActionPerformed

    private void delete_by_orgavailable_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_orgavailable_buttonActionPerformed
        delete_by_user_combobox.setVisible(false);
        delete_by_patient_combobox.setVisible(false);
        delete_by_donor_combobox.setVisible(false);
        delete_by_doctor_combobox.setVisible(false);
        delete_by_organization_combobox.setVisible(false);
        delete_by_transaction_combobox.setVisible(false);
        delete_by_orghead_combobox.setVisible(false);
        
        delete_by_user_done_button.setVisible(false);
        delete_by_patient_done_button.setVisible(false);
        delete_by_donor_done_button.setVisible(false);
        delete_by_doctor_done_button.setVisible(false);
        delete_by_organization_done_button.setVisible(false);
        delete_by_transaction_done_button.setVisible(false);
        delete_by_orghead_done_button.setVisible(false);
        
        delete_by_user_textfield.setVisible(false);
        delete_by_patient_textfield.setVisible(false);
        delete_by_donor_textfield.setVisible(false);
        delete_by_doctor_textfield.setVisible(false);
        delete_by_organization_textfield.setVisible(false);
        delete_by_transaction_textfield.setVisible(false);
        delete_by_orghead_textfield.setVisible(false);
               // TODO add your handling code here:
               
        delete_by_orgavailable_combobox.setVisible(true);
        delete_by_orgavailable_done_button.setVisible(true);
        delete_by_orgavailable_textfield.setVisible(true);
        
    }//GEN-LAST:event_delete_by_orgavailable_buttonActionPerformed

    private void delete_by_user_done_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_user_done_buttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=delete_by_user_combobox.getSelectedItem().toString();
                String value=delete_by_user_textfield.getText();
ResultSet rs = st.executeQuery("delete from user1 where "+colname+" = '"+value+"'");
//ResultSetMetaData meta=rs.getMetaData();
//int numberOfColumns=meta.getColumnCount();
//            while(rs.next()){
////                int no = rs.getInt(1);
////                String name = rs.getString(2);
////                System.out.println("no: "+no+" name: "+name);
//                    Object[] rowData=new Object[numberOfColumns];
//                    for (int i = 0; i < rowData.length; ++i) {
//                    rowData[i]=rs.getObject(i+1);
//                }
//                  tm.addRow(rowData);
//            }
//            System.out.println("DONE");
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_by_user_done_buttonActionPerformed

    private void delete_by_patient_done_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_patient_done_buttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=delete_by_patient_combobox.getSelectedItem().toString();
                String value=delete_by_patient_textfield.getText();
ResultSet rs = st.executeQuery("delete from patient where "+colname+" = '"+value+"'");
//ResultSetMetaData meta=rs.getMetaData();
//int numberOfColumns=meta.getColumnCount();
//            while(rs.next()){
////                int no = rs.getInt(1);
////                String name = rs.getString(2);
////                System.out.println("no: "+no+" name: "+name);
//                    Object[] rowData=new Object[numberOfColumns];
//                    for (int i = 0; i < rowData.length; ++i) {
//                    rowData[i]=rs.getObject(i+1);
//                }
//                  tm.addRow(rowData);
//            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_by_patient_done_buttonActionPerformed

    private void delete_by_donor_done_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_donor_done_buttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=delete_by_donor_combobox.getSelectedItem().toString();
                String value=delete_by_donor_textfield.getText();
ResultSet rs = st.executeQuery("delete from donor where "+colname+" = '"+value+"'");
//ResultSetMetaData meta=rs.getMetaData();
//int numberOfColumns=meta.getColumnCount();
//            while(rs.next()){
////                int no = rs.getInt(1);
////                String name = rs.getString(2);
////                System.out.println("no: "+no+" name: "+name);
//                    Object[] rowData=new Object[numberOfColumns];
//                    for (int i = 0; i < rowData.length; ++i) {
//                    rowData[i]=rs.getObject(i+1);
//                }
//                  tm.addRow(rowData);
//            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_by_donor_done_buttonActionPerformed

    private void delete_by_doctor_done_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_doctor_done_buttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=delete_by_doctor_combobox.getSelectedItem().toString();
                String value=delete_by_doctor_textfield.getText();
ResultSet rs = st.executeQuery("delete from doctor where "+colname+" = '"+value+"'");
//ResultSetMetaData meta=rs.getMetaData();
//int numberOfColumns=meta.getColumnCount();
//            while(rs.next()){
////                int no = rs.getInt(1);
////                String name = rs.getString(2);
////                System.out.println("no: "+no+" name: "+name);
//                    Object[] rowData=new Object[numberOfColumns];
//                    for (int i = 0; i < rowData.length; ++i) {
//                    rowData[i]=rs.getObject(i+1);
//                }
//                  tm.addRow(rowData);
//            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_by_doctor_done_buttonActionPerformed

    private void delete_by_organization_done_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_organization_done_buttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=delete_by_organization_combobox.getSelectedItem().toString();
                String value=delete_by_organization_textfield.getText();
ResultSet rs = st.executeQuery("delete from organization where "+colname+" = '"+value+"'");
//ResultSetMetaData meta=rs.getMetaData();
//int numberOfColumns=meta.getColumnCount();
//            while(rs.next()){
////                int no = rs.getInt(1);
////                String name = rs.getString(2);
////                System.out.println("no: "+no+" name: "+name);
//                    Object[] rowData=new Object[numberOfColumns];
//                    for (int i = 0; i < rowData.length; ++i) {
//                    rowData[i]=rs.getObject(i+1);
//                }
//                  tm.addRow(rowData);
//            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_by_organization_done_buttonActionPerformed

    private void delete_by_orgavailable_done_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_orgavailable_done_buttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=delete_by_orgavailable_combobox.getSelectedItem().toString();
                String value=delete_by_orgavailable_textfield.getText();
ResultSet rs = st.executeQuery("delete from organ_available where "+colname+" = '"+value+"'");
//ResultSetMetaData meta=rs.getMetaData();
//int numberOfColumns=meta.getColumnCount();
//            while(rs.next()){
////                int no = rs.getInt(1);
////                String name = rs.getString(2);
////                System.out.println("no: "+no+" name: "+name);
//                    Object[] rowData=new Object[numberOfColumns];
//                    for (int i = 0; i < rowData.length; ++i) {
//                    rowData[i]=rs.getObject(i+1);
//                }
//                  tm.addRow(rowData);
//            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_by_orgavailable_done_buttonActionPerformed

    private void delete_by_transaction_done_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_transaction_done_buttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=delete_by_transaction_combobox.getSelectedItem().toString();
                String value=delete_by_transaction_textfield.getText();
ResultSet rs = st.executeQuery("delete from transaction where "+colname+" = '"+value+"'");
//ResultSetMetaData meta=rs.getMetaData();
//int numberOfColumns=meta.getColumnCount();
//            while(rs.next()){
////                int no = rs.getInt(1);
////                String name = rs.getString(2);
////                System.out.println("no: "+no+" name: "+name);
//                    Object[] rowData=new Object[numberOfColumns];
//                    for (int i = 0; i < rowData.length; ++i) {
//                    rowData[i]=rs.getObject(i+1);
//                }
//                  tm.addRow(rowData);
//            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_by_transaction_done_buttonActionPerformed

    private void delete_by_orghead_done_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_by_orghead_done_buttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=delete_by_orghead_combobox.getSelectedItem().toString();
                String value=delete_by_orghead_textfield.getText();
ResultSet rs = st.executeQuery("delete from organization_head where "+colname+" = '"+value+"'");
//ResultSetMetaData meta=rs.getMetaData();
//int numberOfColumns=meta.getColumnCount();
//            while(rs.next()){
////                int no = rs.getInt(1);
////                String name = rs.getString(2);
////                System.out.println("no: "+no+" name: "+name);
//                    Object[] rowData=new Object[numberOfColumns];
//                    for (int i = 0; i < rowData.length; ++i) {
//                    rowData[i]=rs.getObject(i+1);
//                }
//                  tm.addRow(rowData);
//            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_by_orghead_done_buttonActionPerformed

    private void DISPLAY_USERS_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_USERS_BUTTONActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
ResultSet rs = st.executeQuery("select USER_ID,NAME,DATE_OF_BIRTH,MEDICAL_INSURANCE,MEDICAL_HISTORY,STREET,CITY,STATE from user1");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_USERS_BUTTONActionPerformed

    private void DISPLAY_PATIENTS_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_PATIENTS_BUTTONActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
ResultSet rs = st.executeQuery("select PATIENT_ID,ORGAN_REQ,REASON_OF_PROCUREMENT,DOCTOR_ID,USER_ID from patient");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_PATIENTS_BUTTONActionPerformed

    private void DISPLAY_DONOR_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_DONOR_BUTTONActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
ResultSet rs = st.executeQuery("select DONOR_ID,ORGAN_DONATED,REASON_OF_DONATION,ORGANIZATION_ID,USER_ID from donor");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_DONOR_BUTTONActionPerformed

    private void DISPLAY_DOCTOR_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_DOCTOR_BUTTONActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
ResultSet rs = st.executeQuery("select DOCTOR_ID,DOCTOR_NAME,DEPARTMENT_NAME,ORGANIZATION_ID from doctor");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_DOCTOR_BUTTONActionPerformed

    private void DISPLAY_ORGANIZATION_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_ORGANIZATION_BUTTONActionPerformed
                                                      
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
ResultSet rs = st.executeQuery("select ORGANIZATION_ID,ORGANIZATION_NAME,LOCATION,GOVERNMENT_APPROVED from organization");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_ORGANIZATION_BUTTONActionPerformed

    private void DISPLAY_ORGAN_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_ORGAN_BUTTONActionPerformed
                                           
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
ResultSet rs = st.executeQuery("select ORGAN_ID,ORGAN_NAME,DONOR_ID from organ_available");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_ORGAN_BUTTONActionPerformed

    private void DISPLAY_TRANSACTIONS_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_TRANSACTIONS_BUTTONActionPerformed
                                 
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
ResultSet rs = st.executeQuery("select PATIENT_ID,ORGAN_ID,DONOR_ID,DATE_OF_TRANSACTION,STATUS from transaction");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_TRANSACTIONS_BUTTONActionPerformed

    private void DISPLAY_ORGHEAD_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_ORGHEAD_BUTTONActionPerformed
                     
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
ResultSet rs = st.executeQuery("select ORGANIZATION_ID,EMPLOYEE_ID,NAME,DATE_OF_JOINING,TERM_LENGTH from organization_head");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }           // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_ORGHEAD_BUTTONActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       try {
            //                jTextField4.setText("Welcome");
            //  System.out.println(user);
            Thread.sleep(2000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Delete_Screen_2.class.getName()).log(Level.SEVERE, null, ex);
        }
                 this.dispose();
                 
              // new projectjava.LoginPage.c1();
               new dbms.SIUD().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Delete_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Delete_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Delete_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Delete_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Delete_Screen_2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DISPLAY_DOCTOR_BUTTON;
    private javax.swing.JButton DISPLAY_DONOR_BUTTON;
    private javax.swing.JButton DISPLAY_ORGANIZATION_BUTTON;
    private javax.swing.JButton DISPLAY_ORGAN_BUTTON;
    private javax.swing.JButton DISPLAY_ORGHEAD_BUTTON;
    private javax.swing.JButton DISPLAY_PATIENTS_BUTTON;
    private javax.swing.JButton DISPLAY_TRANSACTIONS_BUTTON;
    private javax.swing.JButton DISPLAY_USERS_BUTTON;
    private javax.swing.JButton delete_by_doctor_button;
    private javax.swing.JComboBox<String> delete_by_doctor_combobox;
    private javax.swing.JButton delete_by_doctor_done_button;
    private javax.swing.JTextField delete_by_doctor_textfield;
    private javax.swing.JButton delete_by_donor_button;
    private javax.swing.JComboBox<String> delete_by_donor_combobox;
    private javax.swing.JButton delete_by_donor_done_button;
    private javax.swing.JTextField delete_by_donor_textfield;
    private javax.swing.JButton delete_by_organization_button;
    private javax.swing.JComboBox<String> delete_by_organization_combobox;
    private javax.swing.JButton delete_by_organization_done_button;
    private javax.swing.JTextField delete_by_organization_textfield;
    private javax.swing.JButton delete_by_orgavailable_button;
    private javax.swing.JComboBox<String> delete_by_orgavailable_combobox;
    private javax.swing.JButton delete_by_orgavailable_done_button;
    private javax.swing.JTextField delete_by_orgavailable_textfield;
    private javax.swing.JButton delete_by_orghead_button;
    private javax.swing.JComboBox<String> delete_by_orghead_combobox;
    private javax.swing.JButton delete_by_orghead_done_button;
    private javax.swing.JTextField delete_by_orghead_textfield;
    private javax.swing.JButton delete_by_patient_button;
    private javax.swing.JComboBox<String> delete_by_patient_combobox;
    private javax.swing.JButton delete_by_patient_done_button;
    private javax.swing.JTextField delete_by_patient_textfield;
    private javax.swing.JButton delete_by_transaction_button;
    private javax.swing.JComboBox<String> delete_by_transaction_combobox;
    private javax.swing.JButton delete_by_transaction_done_button;
    private javax.swing.JTextField delete_by_transaction_textfield;
    private javax.swing.JButton delete_by_user_button;
    private javax.swing.JComboBox<String> delete_by_user_combobox;
    private javax.swing.JButton delete_by_user_done_button;
    private javax.swing.JTextField delete_by_user_textfield;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
