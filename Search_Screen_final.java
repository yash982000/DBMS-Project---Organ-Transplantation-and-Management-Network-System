/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbms;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author VARSHIL
 */
public class Search_Screen_final extends javax.swing.JFrame {

    /**
     * Creates new form Search_Screen
     */
    public Search_Screen_final() {
        initComponents();
        search_by_user_ComboBox.setVisible(false);
        search_by_patient_ComboBox.setVisible(false);
        search_by_donor_ComboBox.setVisible(false);
        search_by_doctor_ComboBox.setVisible(false);
        search_by_organization_ComboBox.setVisible(false);
        search_by_organ_available_ComboBox.setVisible(false);
        search_by_transaction_ComboBox.setVisible(false);
        search_by_orghead_ComboBox.setVisible(false);
        
        
        
        
        search_by_user_textfield.setVisible(false);
        search_by_patient_textfield.setVisible(false);
        search_by_donor_textfield.setVisible(false);
        search_by_doctor_textfield.setVisible(false);
        search_by_organization_textfield.setVisible(false);
        search_by_organ_available_textfield.setVisible(false);
        search_by_transaction_textfield.setVisible(false);
        search_by_orghead_textfield.setVisible(false);
        
        
        search_by_user_Donebutton.setVisible(false);
        search_by_patient_Donebutton.setVisible(false);
        search_by_donor_Donebutton.setVisible(false);
        search_by_doctor_Donebutton.setVisible(false);
        search_by_organization_Donebutton.setVisible(false);
        search_by_organ_available_Donebutton.setVisible(false);
        search_by_transaction_Donebutton.setVisible(false);
        search_by_orghead_Donebutton.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        search_by_user_button = new javax.swing.JButton();
        search_by_patient_button = new javax.swing.JButton();
        search_by_donor_button = new javax.swing.JButton();
        search_by_doctor_button = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        search_by_doctor_Donebutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        search_by_patient_Donebutton = new javax.swing.JButton();
        search_by_orghead_Donebutton = new javax.swing.JButton();
        search_by_donor_Donebutton = new javax.swing.JButton();
        search_by_organization_button = new javax.swing.JButton();
        search_by_organ_available_button = new javax.swing.JButton();
        search_by_transaction_button = new javax.swing.JButton();
        search_by_user_Donebutton = new javax.swing.JButton();
        search_by_organization_Donebutton = new javax.swing.JButton();
        search_by_organ_available_Donebutton = new javax.swing.JButton();
        search_by_organization_head_button = new javax.swing.JButton();
        search_by_transaction_Donebutton = new javax.swing.JButton();
        search_by_user_ComboBox = new javax.swing.JComboBox<>();
        search_by_patient_ComboBox = new javax.swing.JComboBox<>();
        search_by_donor_ComboBox = new javax.swing.JComboBox<>();
        search_by_doctor_ComboBox = new javax.swing.JComboBox<>();
        search_by_organization_ComboBox = new javax.swing.JComboBox<>();
        search_by_organ_available_ComboBox = new javax.swing.JComboBox<>();
        search_by_transaction_ComboBox = new javax.swing.JComboBox<>();
        search_by_orghead_ComboBox = new javax.swing.JComboBox<>();
        search_by_user_textfield = new javax.swing.JTextField();
        search_by_patient_textfield = new javax.swing.JTextField();
        search_by_doctor_textfield = new javax.swing.JTextField();
        search_by_donor_textfield = new javax.swing.JTextField();
        search_by_organization_textfield = new javax.swing.JTextField();
        search_by_organ_available_textfield = new javax.swing.JTextField();
        search_by_transaction_textfield = new javax.swing.JTextField();
        search_by_orghead_textfield = new javax.swing.JTextField();
        DISPLAY_USERS_BUTTON = new javax.swing.JButton();
        DISPLAY_DONOR_BUTTON = new javax.swing.JButton();
        DISPLAY_ORGANIZATION_BUTTON = new javax.swing.JButton();
        DISPLAY_TRANSACTIONS_BUTTON = new javax.swing.JButton();
        DISPLAY_ORGHEAD_BUTTON = new javax.swing.JButton();
        DISPLAY_ORGAN_BUTTON = new javax.swing.JButton();
        DISPLAY_DOCTOR_BUTTON = new javax.swing.JButton();
        DISPLAY_PATIENTS_BUTTON = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        search_by_user_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_user_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Search.jpg")); // NOI18N
        search_by_user_button.setText("Search By User ");
        search_by_user_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_user_buttonActionPerformed(evt);
            }
        });

        search_by_patient_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_patient_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Search.jpg")); // NOI18N
        search_by_patient_button.setText("Search By Patient");
        search_by_patient_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_patient_buttonActionPerformed(evt);
            }
        });

        search_by_donor_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_donor_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Search.jpg")); // NOI18N
        search_by_donor_button.setText("Search By Donor");
        search_by_donor_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_donor_buttonActionPerformed(evt);
            }
        });

        search_by_doctor_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_doctor_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Search.jpg")); // NOI18N
        search_by_doctor_button.setText("Search By Doctor");
        search_by_doctor_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_doctor_buttonActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Back (1).jpg")); // NOI18N
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        search_by_doctor_Donebutton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_doctor_Donebutton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        search_by_doctor_Donebutton.setText("Done");
        search_by_doctor_Donebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_doctor_DonebuttonActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        search_by_patient_Donebutton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_patient_Donebutton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        search_by_patient_Donebutton.setText("Done");
        search_by_patient_Donebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_patient_DonebuttonActionPerformed(evt);
            }
        });

        search_by_orghead_Donebutton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_orghead_Donebutton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        search_by_orghead_Donebutton.setText("Done");
        search_by_orghead_Donebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_orghead_DonebuttonActionPerformed(evt);
            }
        });

        search_by_donor_Donebutton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_donor_Donebutton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        search_by_donor_Donebutton.setText("Done");
        search_by_donor_Donebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_donor_DonebuttonActionPerformed(evt);
            }
        });

        search_by_organization_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_organization_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Search.jpg")); // NOI18N
        search_by_organization_button.setText("Search By Organization ");
        search_by_organization_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_organization_buttonActionPerformed(evt);
            }
        });

        search_by_organ_available_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_organ_available_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Search.jpg")); // NOI18N
        search_by_organ_available_button.setText("Search By Organ Available ");
        search_by_organ_available_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_organ_available_buttonActionPerformed(evt);
            }
        });

        search_by_transaction_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_transaction_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Search.jpg")); // NOI18N
        search_by_transaction_button.setText("Search By Transaction ");
        search_by_transaction_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_transaction_buttonActionPerformed(evt);
            }
        });

        search_by_user_Donebutton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_user_Donebutton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        search_by_user_Donebutton.setText("Done");
        search_by_user_Donebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_user_DonebuttonActionPerformed(evt);
            }
        });

        search_by_organization_Donebutton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_organization_Donebutton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        search_by_organization_Donebutton.setText("Done");
        search_by_organization_Donebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_organization_DonebuttonActionPerformed(evt);
            }
        });

        search_by_organ_available_Donebutton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_organ_available_Donebutton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        search_by_organ_available_Donebutton.setText("Done");
        search_by_organ_available_Donebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_organ_available_DonebuttonActionPerformed(evt);
            }
        });

        search_by_organization_head_button.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_organization_head_button.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Small_Search.jpg")); // NOI18N
        search_by_organization_head_button.setText("Search By Organization Head ");
        search_by_organization_head_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_organization_head_buttonActionPerformed(evt);
            }
        });

        search_by_transaction_Donebutton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_transaction_Donebutton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\Done (1).jpg")); // NOI18N
        search_by_transaction_Donebutton.setText("Done");
        search_by_transaction_Donebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_transaction_DonebuttonActionPerformed(evt);
            }
        });

        search_by_user_ComboBox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_user_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User_ID", "Name", "Date_Of_Birth", "Medical_Insurance", "Medical_History", "Street", "City", "State" }));
        search_by_user_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_user_ComboBoxActionPerformed(evt);
            }
        });

        search_by_patient_ComboBox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_patient_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient_ID", "Organ_Required", "Reason_For_Procurement", "Doctor_ID", "User_ID" }));

        search_by_donor_ComboBox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_donor_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Donor_ID", "Organ_Donated", "Reason_Of_Donation", "Organization_ID", "User_ID" }));

        search_by_doctor_ComboBox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_doctor_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor_ID", "Doctor_Name", "Department_Name", "Organization_ID" }));

        search_by_organization_ComboBox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_organization_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Organization_ID", "Organization_Name", "Location", "GOVERNMENT_APPROVED", " " }));

        search_by_organ_available_ComboBox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_organ_available_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Organ_ID", "Organ_Name", "Donor_ID" }));

        search_by_transaction_ComboBox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_transaction_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient_ID", "Organ_ID", "Donor_ID", "Date_Of_Transaction", "Status" }));

        search_by_orghead_ComboBox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_orghead_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Organization_ID", "Employee_ID", "Name", "Date_Of_Joining", "Term_Length" }));

        search_by_user_textfield.setBackground(new java.awt.Color(0, 102, 102));
        search_by_user_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_user_textfield.setForeground(new java.awt.Color(255, 255, 255));
        search_by_user_textfield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        search_by_patient_textfield.setBackground(new java.awt.Color(0, 102, 102));
        search_by_patient_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_patient_textfield.setForeground(new java.awt.Color(255, 255, 255));
        search_by_patient_textfield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        search_by_doctor_textfield.setBackground(new java.awt.Color(0, 102, 102));
        search_by_doctor_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_doctor_textfield.setForeground(new java.awt.Color(255, 255, 255));
        search_by_doctor_textfield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        search_by_donor_textfield.setBackground(new java.awt.Color(0, 102, 102));
        search_by_donor_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_donor_textfield.setForeground(new java.awt.Color(255, 255, 255));
        search_by_donor_textfield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        search_by_organization_textfield.setBackground(new java.awt.Color(0, 102, 102));
        search_by_organization_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_organization_textfield.setForeground(new java.awt.Color(255, 255, 255));
        search_by_organization_textfield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        search_by_organ_available_textfield.setBackground(new java.awt.Color(0, 102, 102));
        search_by_organ_available_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_organ_available_textfield.setForeground(new java.awt.Color(255, 255, 255));
        search_by_organ_available_textfield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        search_by_transaction_textfield.setBackground(new java.awt.Color(0, 102, 102));
        search_by_transaction_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_transaction_textfield.setForeground(new java.awt.Color(255, 255, 255));
        search_by_transaction_textfield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        search_by_orghead_textfield.setBackground(new java.awt.Color(0, 102, 102));
        search_by_orghead_textfield.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        search_by_orghead_textfield.setForeground(new java.awt.Color(255, 255, 255));
        search_by_orghead_textfield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        DISPLAY_USERS_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DISPLAY_USERS_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_USERS_BUTTON.setText("DISPLAY USERS");
        DISPLAY_USERS_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_USERS_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_DONOR_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DISPLAY_DONOR_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_DONOR_BUTTON.setText("DISPLAY DONORS");
        DISPLAY_DONOR_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_DONOR_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_ORGANIZATION_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DISPLAY_ORGANIZATION_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_ORGANIZATION_BUTTON.setText("DISPLAY ORGANIZATION");
        DISPLAY_ORGANIZATION_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_ORGANIZATION_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_TRANSACTIONS_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DISPLAY_TRANSACTIONS_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_TRANSACTIONS_BUTTON.setText("DISPLAY TRANSACTIONS");
        DISPLAY_TRANSACTIONS_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_TRANSACTIONS_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_ORGHEAD_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DISPLAY_ORGHEAD_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_ORGHEAD_BUTTON.setText("DISPLAY ORGANIZATION HEAD");
        DISPLAY_ORGHEAD_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_ORGHEAD_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_ORGAN_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DISPLAY_ORGAN_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_ORGAN_BUTTON.setText("DISPLAY ORGAN AVAILABLE");
        DISPLAY_ORGAN_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_ORGAN_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_DOCTOR_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DISPLAY_DOCTOR_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_DOCTOR_BUTTON.setText("DISPLAY DOCTORS");
        DISPLAY_DOCTOR_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_DOCTOR_BUTTONActionPerformed(evt);
            }
        });

        DISPLAY_PATIENTS_BUTTON.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DISPLAY_PATIENTS_BUTTON.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\images\\View.jpg")); // NOI18N
        DISPLAY_PATIENTS_BUTTON.setText("DISPLAY PATIENTS");
        DISPLAY_PATIENTS_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DISPLAY_PATIENTS_BUTTONActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(search_by_organization_head_button, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(search_by_organ_available_button)
                        .addComponent(search_by_transaction_button)
                        .addComponent(search_by_organization_button)
                        .addComponent(search_by_doctor_button)
                        .addComponent(search_by_donor_button, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(search_by_patient_button)
                        .addComponent(search_by_user_button, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(search_by_user_ComboBox, 0, 326, Short.MAX_VALUE)
                                .addGap(61, 61, 61))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(search_by_doctor_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(search_by_donor_ComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(search_by_patient_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(search_by_organization_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(search_by_organ_available_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_by_transaction_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_by_orghead_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(search_by_patient_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_by_user_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_by_doctor_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_by_donor_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_by_organization_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_by_organ_available_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_by_transaction_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_by_orghead_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(search_by_user_Donebutton)
                    .addComponent(search_by_patient_Donebutton)
                    .addComponent(search_by_donor_Donebutton)
                    .addComponent(search_by_doctor_Donebutton)
                    .addComponent(search_by_organization_Donebutton)
                    .addComponent(search_by_organ_available_Donebutton)
                    .addComponent(search_by_transaction_Donebutton)
                    .addComponent(search_by_orghead_Donebutton))
                .addGap(89, 89, 89)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DISPLAY_USERS_BUTTON)
                    .addComponent(DISPLAY_PATIENTS_BUTTON))
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DISPLAY_DONOR_BUTTON)
                    .addComponent(DISPLAY_DOCTOR_BUTTON))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DISPLAY_ORGANIZATION_BUTTON)
                    .addComponent(DISPLAY_ORGAN_BUTTON))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DISPLAY_TRANSACTIONS_BUTTON)
                    .addComponent(DISPLAY_ORGHEAD_BUTTON))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jButton5)
                .addGap(206, 1839, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton5)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search_by_user_button)
                            .addComponent(search_by_user_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_by_user_Donebutton)
                            .addComponent(search_by_user_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(search_by_patient_button)
                                    .addComponent(search_by_patient_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(search_by_patient_Donebutton)
                                    .addComponent(search_by_patient_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(search_by_donor_button)
                                    .addComponent(search_by_donor_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(search_by_donor_Donebutton)
                                    .addComponent(search_by_donor_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(search_by_doctor_button)
                                    .addComponent(search_by_doctor_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(search_by_doctor_Donebutton)
                                    .addComponent(search_by_doctor_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search_by_organization_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_by_organization_button)
                            .addComponent(search_by_organization_Donebutton)
                            .addComponent(search_by_organization_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search_by_organ_available_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_by_organ_available_Donebutton)
                            .addComponent(search_by_organ_available_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_by_organ_available_button))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search_by_transaction_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_by_transaction_Donebutton)
                            .addComponent(search_by_transaction_button)
                            .addComponent(search_by_transaction_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search_by_orghead_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_by_orghead_Donebutton)
                            .addComponent(search_by_orghead_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_by_organization_head_button)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DISPLAY_USERS_BUTTON)
                    .addComponent(DISPLAY_DONOR_BUTTON)
                    .addComponent(DISPLAY_ORGANIZATION_BUTTON)
                    .addComponent(DISPLAY_TRANSACTIONS_BUTTON))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DISPLAY_PATIENTS_BUTTON)
                    .addComponent(DISPLAY_DOCTOR_BUTTON)
                    .addComponent(DISPLAY_ORGAN_BUTTON)
                    .addComponent(DISPLAY_ORGHEAD_BUTTON))
                .addGap(56, 56, 56))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void search_by_donor_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_donor_buttonActionPerformed

        search_by_user_ComboBox.setVisible(false);
        search_by_patient_ComboBox.setVisible(false);
        search_by_doctor_ComboBox.setVisible(false);
        search_by_organization_ComboBox.setVisible(false);
        search_by_organ_available_ComboBox.setVisible(false);
        search_by_transaction_ComboBox.setVisible(false);
        search_by_orghead_ComboBox.setVisible(false);
        
        
        
        
        search_by_user_textfield.setVisible(false);
        search_by_patient_textfield.setVisible(false);
        search_by_doctor_textfield.setVisible(false);
        search_by_organization_textfield.setVisible(false);
        search_by_organ_available_textfield.setVisible(false);
        search_by_transaction_textfield.setVisible(false);
        search_by_orghead_textfield.setVisible(false);
        
        
        search_by_user_Donebutton.setVisible(false);
        search_by_patient_Donebutton.setVisible(false);
        search_by_doctor_Donebutton.setVisible(false);
        search_by_organization_Donebutton.setVisible(false);
        search_by_organ_available_Donebutton.setVisible(false);
        search_by_transaction_Donebutton.setVisible(false);
        search_by_orghead_Donebutton.setVisible(false);
                // TODO add your handling code here:
                
        search_by_donor_ComboBox.setVisible(true);
        search_by_donor_textfield.setVisible(true);
        search_by_donor_Donebutton.setVisible(true);
        
    }//GEN-LAST:event_search_by_donor_buttonActionPerformed

    private void search_by_user_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_user_ComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_by_user_ComboBoxActionPerformed

    private void search_by_organ_available_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_organ_available_buttonActionPerformed

        search_by_user_ComboBox.setVisible(false);
        search_by_patient_ComboBox.setVisible(false);
        search_by_donor_ComboBox.setVisible(false);
        search_by_doctor_ComboBox.setVisible(false);
        search_by_organization_ComboBox.setVisible(false);
        search_by_transaction_ComboBox.setVisible(false);
        search_by_orghead_ComboBox.setVisible(false);
        
        
        
        search_by_user_textfield.setVisible(false);
        search_by_patient_textfield.setVisible(false);
        search_by_donor_textfield.setVisible(false);
        search_by_doctor_textfield.setVisible(false);
        search_by_organization_textfield.setVisible(false);
        search_by_transaction_textfield.setVisible(false);
        search_by_orghead_textfield.setVisible(false);
        
        
        search_by_user_Donebutton.setVisible(false);
        search_by_patient_Donebutton.setVisible(false);
        search_by_donor_Donebutton.setVisible(false);
        search_by_doctor_Donebutton.setVisible(false);
        search_by_organization_Donebutton.setVisible(false);
        search_by_transaction_Donebutton.setVisible(false);
        search_by_orghead_Donebutton.setVisible(false);
        // TODO add your handling code here:
                
                
        search_by_organ_available_ComboBox.setVisible(true);
        search_by_organ_available_textfield.setVisible(true);
        search_by_organ_available_Donebutton.setVisible(true);

    }//GEN-LAST:event_search_by_organ_available_buttonActionPerformed

    private void DISPLAY_USERS_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_USERS_BUTTONActionPerformed
        DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
        //                   tm.setRowCount(0);
        tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
            System.out.println("Exception caught --> " + e);
        }
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select USER_ID,NAME,DATE_OF_BIRTH,MEDICAL_INSURANCE,MEDICAL_HISTORY,STREET,CITY,STATE from user1");
            ResultSetMetaData meta=rs.getMetaData();
            int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                Object[] rowData=new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                tm.addRow(rowData);
            }

        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_USERS_BUTTONActionPerformed

    private void DISPLAY_DONOR_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_DONOR_BUTTONActionPerformed
        DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
        //                   tm.setRowCount(0);
        tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
            System.out.println("Exception caught --> " + e);
        }
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select DONOR_ID,ORGAN_DONATED,REASON_OF_DONATION,ORGANIZATION_ID,USER_ID from donor");
            ResultSetMetaData meta=rs.getMetaData();
            int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                Object[] rowData=new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                tm.addRow(rowData);
            }

        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_DONOR_BUTTONActionPerformed

    private void DISPLAY_ORGANIZATION_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_ORGANIZATION_BUTTONActionPerformed

        DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
        //                   tm.setRowCount(0);
        tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
            System.out.println("Exception caught --> " + e);
        }
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select ORGANIZATION_ID,ORGANIZATION_NAME,LOCATION,GOVERNMENT_APPROVED from organization");
            ResultSetMetaData meta=rs.getMetaData();
            int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                Object[] rowData=new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                tm.addRow(rowData);
            }

        }catch(Exception e){
            e.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_ORGANIZATION_BUTTONActionPerformed

    private void DISPLAY_TRANSACTIONS_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_TRANSACTIONS_BUTTONActionPerformed

        DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
        //                   tm.setRowCount(0);
        tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
            System.out.println("Exception caught --> " + e);
        }
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select PATIENT_ID,ORGAN_ID,DONOR_ID,DATE_OF_TRANSACTION,STATUS from transaction");
            ResultSetMetaData meta=rs.getMetaData();
            int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                Object[] rowData=new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                tm.addRow(rowData);
            }

        }catch(Exception e){
            e.printStackTrace();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_TRANSACTIONS_BUTTONActionPerformed

    private void DISPLAY_ORGHEAD_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_ORGHEAD_BUTTONActionPerformed

        DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
        //                   tm.setRowCount(0);
        tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
            System.out.println("Exception caught --> " + e);
        }
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select ORGANIZATION_ID,EMPLOYEE_ID,NAME,DATE_OF_JOINING,TERM_LENGTH from organization_head");
            ResultSetMetaData meta=rs.getMetaData();
            int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                Object[] rowData=new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                tm.addRow(rowData);
            }

        }catch(Exception e){
            e.printStackTrace();
        }           // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_ORGHEAD_BUTTONActionPerformed

    private void DISPLAY_ORGAN_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_ORGAN_BUTTONActionPerformed

        DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
        //                   tm.setRowCount(0);
        tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
            System.out.println("Exception caught --> " + e);
        }
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select ORGAN_ID,ORGAN_NAME,DONOR_ID from organ_available");
            ResultSetMetaData meta=rs.getMetaData();
            int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                Object[] rowData=new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                tm.addRow(rowData);
            }

        }catch(Exception e){
            e.printStackTrace();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_ORGAN_BUTTONActionPerformed

    private void DISPLAY_DOCTOR_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_DOCTOR_BUTTONActionPerformed
        DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
        //                   tm.setRowCount(0);
        tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
            System.out.println("Exception caught --> " + e);
        }
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select DOCTOR_ID,DOCTOR_NAME,DEPARTMENT_NAME,ORGANIZATION_ID from doctor");
            ResultSetMetaData meta=rs.getMetaData();
            int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                Object[] rowData=new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                tm.addRow(rowData);
            }

        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_DOCTOR_BUTTONActionPerformed

    private void DISPLAY_PATIENTS_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DISPLAY_PATIENTS_BUTTONActionPerformed
        DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
        //                   tm.setRowCount(0);
        tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
            System.out.println("Exception caught --> " + e);
        }
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select PATIENT_ID,ORGAN_REQ,REASON_OF_PROCUREMENT,DOCTOR_ID,USER_ID from patient");
            ResultSetMetaData meta=rs.getMetaData();
            int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
                Object[] rowData=new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                tm.addRow(rowData);
            }

        }catch(Exception e){
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_DISPLAY_PATIENTS_BUTTONActionPerformed

    private void search_by_user_DonebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_user_DonebuttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                  tm.setRowCount(0);
 
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=search_by_user_ComboBox.getSelectedItem().toString();
                String value=search_by_user_textfield.getText();
ResultSet rs = st.executeQuery("select * from user1 where "+colname+"='"+value+"'");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
//                int no = rs.getInt(1);
//                String name = rs.getString(2);
//                System.out.println("no: "+no+" name: "+name);
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
        JOptionPane.showMessageDialog(rootPane, "ETERD VALUES DON'T GO WITH RESPECTIVE DATATYPES","ERROR",JOptionPane.ERROR_MESSAGE);
 
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_search_by_user_DonebuttonActionPerformed

    private void search_by_patient_DonebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_patient_DonebuttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                tm.setRowCount(0);
        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=search_by_patient_ComboBox.getSelectedItem().toString();
                String value=search_by_patient_textfield.getText();
ResultSet rs = st.executeQuery("select * from patient where "+colname+"='"+value+"'");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
//                int no = rs.getInt(1);
//                String name = rs.getString(2);
//                System.out.println("no: "+no+" name: "+name);
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
            
        JOptionPane.showMessageDialog(rootPane, "ENTERD VALUES DON'T GO WITH RESPECTIVE DATATYPES","ERROR",JOptionPane.ERROR_MESSAGE);
 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_search_by_patient_DonebuttonActionPerformed

    private void search_by_donor_DonebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_donor_DonebuttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                   tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=search_by_donor_ComboBox.getSelectedItem().toString();
                String value=search_by_donor_textfield.getText();
ResultSet rs = st.executeQuery("select * from donor where "+colname+"='"+value+"'");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
//                int no = rs.getInt(1);
//                String name = rs.getString(2);
//                System.out.println("no: "+no+" name: "+name);
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        JOptionPane.showMessageDialog(rootPane, "ENTERD VALUES DON'T GO WITH RESPECTIVE DATATYPES","ERROR",JOptionPane.ERROR_MESSAGE);
 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_search_by_donor_DonebuttonActionPerformed

    private void search_by_doctor_DonebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_doctor_DonebuttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                   tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=search_by_doctor_ComboBox.getSelectedItem().toString();
                String value=search_by_doctor_textfield.getText();
ResultSet rs = st.executeQuery("select * from doctor where "+colname+"='"+value+"'");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
//                int no = rs.getInt(1);
//                String name = rs.getString(2);
//                System.out.println("no: "+no+" name: "+name);
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        JOptionPane.showMessageDialog(rootPane, "ENTERD VALUES DON'T GO WITH RESPECTIVE DATATYPES","ERROR",JOptionPane.ERROR_MESSAGE);
 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_search_by_doctor_DonebuttonActionPerformed

    private void search_by_organization_DonebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_organization_DonebuttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                   tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=search_by_organization_ComboBox.getSelectedItem().toString();
                String value=search_by_organization_textfield.getText();
ResultSet rs = st.executeQuery("select * from organization where "+colname+"='"+value+"'");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
//                int no = rs.getInt(1);
//                String name = rs.getString(2);
//                System.out.println("no: "+no+" name: "+name);
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        JOptionPane.showMessageDialog(rootPane, "ENTERD VALUES DON'T GO WITH RESPECTIVE DATATYPES","ERROR",JOptionPane.ERROR_MESSAGE);
 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_search_by_organization_DonebuttonActionPerformed

    private void search_by_organ_available_DonebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_organ_available_DonebuttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                   tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=search_by_organ_available_ComboBox.getSelectedItem().toString();
                String value=search_by_organ_available_textfield.getText();
ResultSet rs = st.executeQuery("select * from organ_available where "+colname+"='"+value+"'");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
//                int no = rs.getInt(1);
//                String name = rs.getString(2);
//                System.out.println("no: "+no+" name: "+name);
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        JOptionPane.showMessageDialog(rootPane, "ENTERD VALUES DON'T GO WITH RESPECTIVE DATATYPES","ERROR",JOptionPane.ERROR_MESSAGE);
 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_search_by_organ_available_DonebuttonActionPerformed

    private void search_by_transaction_DonebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_transaction_DonebuttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                   tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=search_by_transaction_ComboBox.getSelectedItem().toString();
                String value=search_by_transaction_textfield.getText();
ResultSet rs = st.executeQuery("select * from transaction where "+colname+"='"+value+"'");
ResultSetMetaData meta=rs.getMetaData();
int numberOfColumns=meta.getColumnCount();
            while(rs.next()){
//                int no = rs.getInt(1);
//                String name = rs.getString(2);
//                System.out.println("no: "+no+" name: "+name);
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        JOptionPane.showMessageDialog(rootPane, "ENTERD VALUES DON'T GO WITH RESPECTIVE DATATYPES","ERROR",JOptionPane.ERROR_MESSAGE);
 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_search_by_transaction_DonebuttonActionPerformed

    private void search_by_orghead_DonebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_orghead_DonebuttonActionPerformed
DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
//                   tm.setRowCount(0);
                                   tm.setRowCount(0);

        Connection conn = null;
        try{
            String driverName = "oracle.jdbc.OracleDriver";
            Class.forName(driverName);
            String serverName = "LAPTOP-CAL2CB75";
            String serverPort = "1522";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@" + serverName +":" + serverPort + ":" + sid;
            String username = "VARSHIL";
            String password = "admin";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Successful login");
        }catch(Exception e){
           System.out.println("Exception caught --> " + e); 
        }
        try{
            Statement st = conn.createStatement();
//            System.out.println(jComboBox1.getSelectedItem());
//            System.out.println(jTextField1.getText());
                String colname=search_by_orghead_ComboBox.getSelectedItem().toString();
                String value=search_by_orghead_textfield.getText();

                ResultSet rs = st.executeQuery("select * from organization_head where "+colname+"='"+value+"'");

                ResultSetMetaData meta=rs.getMetaData();

                int numberOfColumns=meta.getColumnCount();
                while(rs.next()){
//                int no = rs.getInt(1);
//                String name = rs.getString(2);
//                System.out.println("no: "+no+" name: "+name);
                    Object[] rowData=new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                    rowData[i]=rs.getObject(i+1);
                }
                  tm.addRow(rowData);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        JOptionPane.showMessageDialog(rootPane, "ENTERD VALUES DON'T GO WITH RESPECTIVE DATATYPES","ERROR",JOptionPane.ERROR_MESSAGE);
 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_search_by_orghead_DonebuttonActionPerformed

    private void search_by_user_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_user_buttonActionPerformed

        search_by_patient_ComboBox.setVisible(false);
        search_by_donor_ComboBox.setVisible(false);
        search_by_doctor_ComboBox.setVisible(false);
        search_by_organization_ComboBox.setVisible(false);
        search_by_organ_available_ComboBox.setVisible(false);
        search_by_transaction_ComboBox.setVisible(false);
        search_by_orghead_ComboBox.setVisible(false);
        
        
        
        search_by_patient_textfield.setVisible(false);
        search_by_donor_textfield.setVisible(false);
        search_by_doctor_textfield.setVisible(false);
        search_by_organization_textfield.setVisible(false);
        search_by_organ_available_textfield.setVisible(false);
        search_by_transaction_textfield.setVisible(false);
        search_by_orghead_textfield.setVisible(false);
        
        
        search_by_patient_Donebutton.setVisible(false);
        search_by_donor_Donebutton.setVisible(false);
        search_by_doctor_Donebutton.setVisible(false);
        search_by_organization_Donebutton.setVisible(false);
        search_by_organ_available_Donebutton.setVisible(false);
        search_by_transaction_Donebutton.setVisible(false);
        search_by_orghead_Donebutton.setVisible(false);
                // TODO add your handling code here:
                
        search_by_user_ComboBox.setVisible(true);
        search_by_user_textfield.setVisible(true);
        search_by_user_Donebutton.setVisible(true);
        
        
    }//GEN-LAST:event_search_by_user_buttonActionPerformed

    private void search_by_patient_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_patient_buttonActionPerformed

        search_by_user_ComboBox.setVisible(false);
        search_by_donor_ComboBox.setVisible(false);
        search_by_doctor_ComboBox.setVisible(false);
        search_by_organization_ComboBox.setVisible(false);
        search_by_organ_available_ComboBox.setVisible(false);
        search_by_transaction_ComboBox.setVisible(false);
        search_by_orghead_ComboBox.setVisible(false);
        
        
        
        
        search_by_user_textfield.setVisible(false);
        search_by_donor_textfield.setVisible(false);
        search_by_doctor_textfield.setVisible(false);
        search_by_organization_textfield.setVisible(false);
        search_by_organ_available_textfield.setVisible(false);
        search_by_transaction_textfield.setVisible(false);
        search_by_orghead_textfield.setVisible(false);
        
        
        search_by_user_Donebutton.setVisible(false);
        search_by_donor_Donebutton.setVisible(false);
        search_by_doctor_Donebutton.setVisible(false);
        search_by_organization_Donebutton.setVisible(false);
        search_by_organ_available_Donebutton.setVisible(false);
        search_by_transaction_Donebutton.setVisible(false);
        search_by_orghead_Donebutton.setVisible(false);
                // TODO add your handling code here:
        
        search_by_patient_ComboBox.setVisible(true);
        search_by_patient_textfield.setVisible(true);
        search_by_patient_Donebutton.setVisible(true);
        
    }//GEN-LAST:event_search_by_patient_buttonActionPerformed

    private void search_by_doctor_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_doctor_buttonActionPerformed

        search_by_user_ComboBox.setVisible(false);
        search_by_patient_ComboBox.setVisible(false);
        search_by_donor_ComboBox.setVisible(false);
        search_by_organization_ComboBox.setVisible(false);
        search_by_organ_available_ComboBox.setVisible(false);
        search_by_transaction_ComboBox.setVisible(false);
        search_by_orghead_ComboBox.setVisible(false);
        
        
        
        
        search_by_user_textfield.setVisible(false);
        search_by_patient_textfield.setVisible(false);
        search_by_donor_textfield.setVisible(false);
        search_by_organization_textfield.setVisible(false);
        search_by_organ_available_textfield.setVisible(false);
        search_by_transaction_textfield.setVisible(false);
        search_by_orghead_textfield.setVisible(false);
        
        
        search_by_user_Donebutton.setVisible(false);
        search_by_patient_Donebutton.setVisible(false);
        search_by_donor_Donebutton.setVisible(false);
        search_by_organization_Donebutton.setVisible(false);
        search_by_organ_available_Donebutton.setVisible(false);
        search_by_transaction_Donebutton.setVisible(false);
        search_by_orghead_Donebutton.setVisible(false);
                // TODO add your handling code here:
        
        search_by_doctor_ComboBox.setVisible(true);
        search_by_doctor_textfield.setVisible(true);
        search_by_doctor_Donebutton.setVisible(true);
        
    }//GEN-LAST:event_search_by_doctor_buttonActionPerformed

    private void search_by_organization_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_organization_buttonActionPerformed

        search_by_user_ComboBox.setVisible(false);
        search_by_patient_ComboBox.setVisible(false);
        search_by_donor_ComboBox.setVisible(false);
        search_by_doctor_ComboBox.setVisible(false);
        search_by_organ_available_ComboBox.setVisible(false);
        search_by_transaction_ComboBox.setVisible(false);
        search_by_orghead_ComboBox.setVisible(false);
        
        
        
        
        search_by_user_textfield.setVisible(false);
        search_by_patient_textfield.setVisible(false);
        search_by_donor_textfield.setVisible(false);
        search_by_doctor_textfield.setVisible(false);
        search_by_organ_available_textfield.setVisible(false);
        search_by_transaction_textfield.setVisible(false);
        search_by_orghead_textfield.setVisible(false);
        
        
        search_by_user_Donebutton.setVisible(false);
        search_by_patient_Donebutton.setVisible(false);
        search_by_donor_Donebutton.setVisible(false);
        search_by_doctor_Donebutton.setVisible(false);
        search_by_organ_available_Donebutton.setVisible(false);
        search_by_transaction_Donebutton.setVisible(false);
        search_by_orghead_Donebutton.setVisible(false);
                // TODO add your handling code here:
                
        search_by_organization_ComboBox.setVisible(true);
        search_by_organization_textfield.setVisible(true);
        search_by_organization_Donebutton.setVisible(true);
        
    }//GEN-LAST:event_search_by_organization_buttonActionPerformed

    private void search_by_transaction_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_transaction_buttonActionPerformed

        search_by_user_ComboBox.setVisible(false);
        search_by_patient_ComboBox.setVisible(false);
        search_by_donor_ComboBox.setVisible(false);
        search_by_doctor_ComboBox.setVisible(false);
        search_by_organization_ComboBox.setVisible(false);
        search_by_organ_available_ComboBox.setVisible(false);
        search_by_orghead_ComboBox.setVisible(false);
        
        
        
        
        search_by_user_textfield.setVisible(false);
        search_by_patient_textfield.setVisible(false);
        search_by_donor_textfield.setVisible(false);
        search_by_doctor_textfield.setVisible(false);
        search_by_organization_textfield.setVisible(false);
        search_by_organ_available_textfield.setVisible(false);
        search_by_orghead_textfield.setVisible(false);
        
        
        search_by_user_Donebutton.setVisible(false);
        search_by_patient_Donebutton.setVisible(false);
        search_by_donor_Donebutton.setVisible(false);
        search_by_doctor_Donebutton.setVisible(false);
        search_by_organization_Donebutton.setVisible(false);
        search_by_organ_available_Donebutton.setVisible(false);
        search_by_orghead_Donebutton.setVisible(false);
                // TODO add your handling code here:
                
                search_by_transaction_ComboBox.setVisible(true);
        search_by_transaction_textfield.setVisible(true);
        search_by_transaction_Donebutton.setVisible(true);
        
    }//GEN-LAST:event_search_by_transaction_buttonActionPerformed

    private void search_by_organization_head_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_organization_head_buttonActionPerformed

        search_by_user_ComboBox.setVisible(false);
        search_by_patient_ComboBox.setVisible(false);
        search_by_donor_ComboBox.setVisible(false);
        search_by_doctor_ComboBox.setVisible(false);
        search_by_organization_ComboBox.setVisible(false);
        search_by_organ_available_ComboBox.setVisible(false);
        search_by_transaction_ComboBox.setVisible(false);
        
        
        
        
        search_by_user_textfield.setVisible(false);
        search_by_patient_textfield.setVisible(false);
        search_by_donor_textfield.setVisible(false);
        search_by_doctor_textfield.setVisible(false);
        search_by_organization_textfield.setVisible(false);
        search_by_organ_available_textfield.setVisible(false);
        search_by_transaction_textfield.setVisible(false);
        
        
        search_by_user_Donebutton.setVisible(false);
        search_by_patient_Donebutton.setVisible(false);
        search_by_donor_Donebutton.setVisible(false);
        search_by_doctor_Donebutton.setVisible(false);
        search_by_organization_Donebutton.setVisible(false);
        search_by_organ_available_Donebutton.setVisible(false);
        search_by_transaction_Donebutton.setVisible(false);
        
        search_by_orghead_ComboBox.setVisible(true);
        search_by_orghead_textfield.setVisible(true);
        search_by_orghead_Donebutton.setVisible(true);
                // TODO add your handling code here:
    }//GEN-LAST:event_search_by_organization_head_buttonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            //                jTextField4.setText("Welcome");
            //  System.out.println(user);
            Thread.sleep(2000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Search_Screen_final.class.getName()).log(Level.SEVERE, null, ex);
        }
                 this.dispose();
                 
              // new projectjava.LoginPage.c1();
               new dbms.SIUD().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search_Screen_final().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DISPLAY_DOCTOR_BUTTON;
    private javax.swing.JButton DISPLAY_DONOR_BUTTON;
    private javax.swing.JButton DISPLAY_ORGANIZATION_BUTTON;
    private javax.swing.JButton DISPLAY_ORGAN_BUTTON;
    private javax.swing.JButton DISPLAY_ORGHEAD_BUTTON;
    private javax.swing.JButton DISPLAY_PATIENTS_BUTTON;
    private javax.swing.JButton DISPLAY_TRANSACTIONS_BUTTON;
    private javax.swing.JButton DISPLAY_USERS_BUTTON;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> search_by_doctor_ComboBox;
    private javax.swing.JButton search_by_doctor_Donebutton;
    private javax.swing.JButton search_by_doctor_button;
    private javax.swing.JTextField search_by_doctor_textfield;
    private javax.swing.JComboBox<String> search_by_donor_ComboBox;
    private javax.swing.JButton search_by_donor_Donebutton;
    private javax.swing.JButton search_by_donor_button;
    private javax.swing.JTextField search_by_donor_textfield;
    private javax.swing.JComboBox<String> search_by_organ_available_ComboBox;
    private javax.swing.JButton search_by_organ_available_Donebutton;
    private javax.swing.JButton search_by_organ_available_button;
    private javax.swing.JTextField search_by_organ_available_textfield;
    private javax.swing.JComboBox<String> search_by_organization_ComboBox;
    private javax.swing.JButton search_by_organization_Donebutton;
    private javax.swing.JButton search_by_organization_button;
    private javax.swing.JButton search_by_organization_head_button;
    private javax.swing.JTextField search_by_organization_textfield;
    private javax.swing.JComboBox<String> search_by_orghead_ComboBox;
    private javax.swing.JButton search_by_orghead_Donebutton;
    private javax.swing.JTextField search_by_orghead_textfield;
    private javax.swing.JComboBox<String> search_by_patient_ComboBox;
    private javax.swing.JButton search_by_patient_Donebutton;
    private javax.swing.JButton search_by_patient_button;
    private javax.swing.JTextField search_by_patient_textfield;
    private javax.swing.JComboBox<String> search_by_transaction_ComboBox;
    private javax.swing.JButton search_by_transaction_Donebutton;
    private javax.swing.JButton search_by_transaction_button;
    private javax.swing.JTextField search_by_transaction_textfield;
    private javax.swing.JComboBox<String> search_by_user_ComboBox;
    private javax.swing.JButton search_by_user_Donebutton;
    private javax.swing.JButton search_by_user_button;
    private javax.swing.JTextField search_by_user_textfield;
    // End of variables declaration//GEN-END:variables
}
